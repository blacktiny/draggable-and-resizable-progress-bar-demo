{"ast":null,"code":"import _slicedToArray from \"/Volumes/Work/React/draggable-and-resizable-progress-bar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Volumes/Work/React/draggable-and-resizable-progress-bar/src/App.js\";\nimport React, { Component } from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport ResizableProgressBar from './ResizableProgressBar'; // a little function to help us with reordering the result\n\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n\n  const _result$splice = result.splice(startIndex, 1),\n        _result$splice2 = _slicedToArray(_result$splice, 1),\n        removed = _result$splice2[0];\n\n  result.splice(endIndex, 0, removed);\n  return result;\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.resizeStopFunc = (index, size) => {\n      const items = this.state.items;\n      items[index].width = size.width;\n      this.setState({\n        items\n      });\n    };\n\n    this.state = {\n      items: [{\n        name: 'aaaaa',\n        width: 300\n      }, {\n        name: 'bbbbb',\n        width: 300\n      }, {\n        name: 'ccccc',\n        width: 300\n      }]\n    };\n    this.onDragEnd = this.onDragEnd.bind(this);\n  }\n\n  onDragEnd(result) {\n    // dropped outside the list\n    if (!result.destination) {\n      return;\n    }\n\n    const items = reorder(this.state.items, result.source.index, result.destination.index);\n    this.setState({\n      items\n    });\n  } // Normally you would want to split things out into separate components.\n  // But in this example everything is just done in one place for simplicity\n\n\n  render() {\n    const progressbarInfo = {\n      resizeStopFunc: this.resizeStopFunc\n    };\n    return React.createElement(DragDropContext, {\n      onDragEnd: this.onDragEnd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Droppable, {\n      droppableId: \"droppable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, provided => React.createElement(\"div\", Object.assign({}, provided.droppableProps, {\n      ref: provided.innerRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), this.state.items.map((item, index) => React.createElement(Draggable, {\n      key: item.name,\n      draggableId: item.name,\n      index: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, provided => React.createElement(\"div\", Object.assign({\n      className: \"item-content\",\n      ref: provided.innerRef\n    }, provided.draggableProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"div\", Object.assign({}, provided.dragHandleProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"time-progress-bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })), React.createElement(ResizableProgressBar, Object.assign({\n      index: index,\n      name: item.name,\n      width: item.width\n    }, progressbarInfo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }))))), provided.placeholder)));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Volumes/Work/React/draggable-and-resizable-progress-bar/src/App.js"],"names":["React","Component","DragDropContext","Droppable","Draggable","ResizableProgressBar","reorder","list","startIndex","endIndex","result","Array","from","splice","removed","App","constructor","props","resizeStopFunc","index","size","items","state","width","setState","name","onDragEnd","bind","destination","source","render","progressbarInfo","provided","droppableProps","innerRef","map","item","draggableProps","dragHandleProps","placeholder"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\"\n\nimport ResizableProgressBar from './ResizableProgressBar'\n\n// a little function to help us with reordering the result\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list)\n  const [removed] = result.splice(startIndex, 1)\n  result.splice(endIndex, 0, removed)\n\n  return result\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      items: [\n        {\n          name: 'aaaaa',\n          width: 300\n        },\n        {\n          name: 'bbbbb',\n          width: 300\n        },\n        {\n          name: 'ccccc',\n          width: 300\n        }\n      ]\n    }\n    this.onDragEnd = this.onDragEnd.bind(this)\n  }\n\n  resizeStopFunc = (index, size) => {\n    const { items } = this.state\n\n    items[index].width = size.width\n\n    this.setState({ items })\n  }\n\n  onDragEnd(result) {\n    // dropped outside the list\n    if (!result.destination) {\n      return\n    }\n\n    const items = reorder(\n      this.state.items,\n      result.source.index,\n      result.destination.index\n    )\n\n    this.setState({\n      items\n    })\n  }\n\n  // Normally you would want to split things out into separate components.\n  // But in this example everything is just done in one place for simplicity\n  render() {\n    const progressbarInfo = {\n      resizeStopFunc: this.resizeStopFunc\n    }\n\n    return (\n      <DragDropContext onDragEnd={this.onDragEnd}>\n        <Droppable droppableId=\"droppable\">\n          {(provided) => (\n            <div\n              {...provided.droppableProps}\n              ref={provided.innerRef}\n            >\n              {this.state.items.map((item, index) => (\n                <Draggable key={item.name} draggableId={item.name} index={index}>\n                  {(provided) => (\n                    <div\n                      className='item-content'\n                      ref={provided.innerRef}\n                      {...provided.draggableProps}\n                      // {...provided.dragHandleProps}\n                    >\n                      <div {...provided.dragHandleProps}>\n                        <div className='time-progress-bar'></div>\n                      </div>\n                      <ResizableProgressBar index={index} name={item.name} width={item.width} {...progressbarInfo} />\n                    </div>\n                  )}\n                </Draggable>\n              ))}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n    )\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}