{"ast":null,"code":"var _jsxFileName = \"/Volumes/Work/React/draggable-and-resizable-progress-bar/src/common/components/ResizableProgressBar/index.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { ResizableBox } from 'react-resizable';\nimport './style.scss';\n\nclass ResizableProgressBar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.resize = (e, data) => {\n      const resizeFunc = this.props.resizeFunc;\n      const index = this.props.index;\n      resizeFunc(index, data.size);\n    };\n\n    this.state = {\n      maxWidth: 800,\n      resizableInfo: {\n        width: 300,\n        height: 20,\n        axis: 'x',\n        handle: React.createElement(\"strong\", {\n          className: \"resize-handler\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }),\n        minConstraints: [0, Infinity],\n        maxConstraints: [800, Infinity],\n        onResize: this.resize\n      }\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          resizableInfo = _this$state.resizableInfo,\n          maxWidth = _this$state.maxWidth;\n    const width = this.props.width;\n    resizableInfo.width = width;\n    return React.createElement(\"div\", {\n      className: \"resizable-progress-bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"progress-bar-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(ResizableBox, Object.assign({\n      className: \"resizable-bar\"\n    }, resizableInfo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"percent-value\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, Number(width / maxWidth * 100).toFixed(2), \" %\"));\n  }\n\n}\n\nResizableProgressBar.propTypes = {\n  index: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired\n};\nexport default ResizableProgressBar;","map":{"version":3,"sources":["/Volumes/Work/React/draggable-and-resizable-progress-bar/src/common/components/ResizableProgressBar/index.js"],"names":["React","Component","PropTypes","ResizableBox","ResizableProgressBar","constructor","props","resize","e","data","resizeFunc","index","size","state","maxWidth","resizableInfo","width","height","axis","handle","minConstraints","Infinity","maxConstraints","onResize","render","Number","toFixed","propTypes","number","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,YAAT,QAA6B,iBAA7B;AAEA,OAAO,cAAP;;AAEA,MAAMC,oBAAN,SAAmCH,SAAnC,CAA6C;AAC3CI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAiBnBC,MAjBmB,GAiBV,CAACC,CAAD,EAAIC,IAAJ,KAAa;AAAA,YACZC,UADY,GACG,KAAKJ,KADR,CACZI,UADY;AAAA,YAEZC,KAFY,GAEF,KAAKL,KAFH,CAEZK,KAFY;AAIpBD,MAAAA,UAAU,CAACC,KAAD,EAAQF,IAAI,CAACG,IAAb,CAAV;AACD,KAtBkB;;AAGjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,GADC;AAEXC,MAAAA,aAAa,EAAE;AACbC,QAAAA,KAAK,EAAE,GADM;AAEbC,QAAAA,MAAM,EAAE,EAFK;AAGbC,QAAAA,IAAI,EAAE,GAHO;AAIbC,QAAAA,MAAM,EAAG;AAAQ,UAAA,SAAS,EAAC,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJI;AAKbC,QAAAA,cAAc,EAAE,CAAC,CAAD,EAAIC,QAAJ,CALH;AAMbC,QAAAA,cAAc,EAAE,CAAC,GAAD,EAAMD,QAAN,CANH;AAObE,QAAAA,QAAQ,EAAE,KAAKhB;AAPF;AAFJ,KAAb;AAYD;;AASDiB,EAAAA,MAAM,GAAG;AAAA,wBAC6B,KAAKX,KADlC;AAAA,UACCE,aADD,eACCA,aADD;AAAA,UACgBD,QADhB,eACgBA,QADhB;AAAA,UAECE,KAFD,GAEW,KAAKV,KAFhB,CAECU,KAFD;AAIPD,IAAAA,aAAa,CAACC,KAAd,GAAsBA,KAAtB;AAEA,WACE;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,YAAD;AAAc,MAAA,SAAS,EAAC;AAAxB,OAA4CD,aAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CADF,EAIE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCU,MAAM,CAACT,KAAK,GAAGF,QAAR,GAAmB,GAApB,CAAN,CAA+BY,OAA/B,CAAuC,CAAvC,CAAhC,OAJF,CADF;AAQD;;AAvC0C;;AA0C7CtB,oBAAoB,CAACuB,SAArB,GAAiC;AAC/BhB,EAAAA,KAAK,EAAET,SAAS,CAAC0B,MAAV,CAAiBC,UADO;AAE/Bb,EAAAA,KAAK,EAAEd,SAAS,CAAC0B,MAAV,CAAiBC;AAFO,CAAjC;AAKA,eAAezB,oBAAf","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { ResizableBox } from 'react-resizable'\n\nimport './style.scss'\n\nclass ResizableProgressBar extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      maxWidth: 800,\n      resizableInfo: {\n        width: 300,\n        height: 20,\n        axis: 'x',\n        handle: (<strong className='resize-handler'></strong>),\n        minConstraints: [0, Infinity],\n        maxConstraints: [800, Infinity],\n        onResize: this.resize\n      }\n    }\n  }\n\n  resize = (e, data) => {\n    const { resizeFunc } = this.props\n    const { index } = this.props\n\n    resizeFunc(index, data.size)\n  }\n\n  render() {\n    const { resizableInfo, maxWidth } = this.state\n    const { width } = this.props\n\n    resizableInfo.width = width\n\n    return (\n      <div className='resizable-progress-bar'>\n        <div className='progress-bar-content'>\n          <ResizableBox className='resizable-bar' {...resizableInfo} />\n        </div>\n        <div className='percent-value'>{Number(width / maxWidth * 100).toFixed(2)} %</div>\n      </div>\n    )\n  }\n}\n\nResizableProgressBar.propTypes = {\n  index: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired\n}\n\nexport default ResizableProgressBar\n"]},"metadata":{},"sourceType":"module"}