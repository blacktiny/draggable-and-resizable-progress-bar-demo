{"ast":null,"code":"import _classCallCheck from\"/Volumes/Work/React/draggable-and-resizable-progress-bar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Volumes/Work/React/draggable-and-resizable-progress-bar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Volumes/Work/React/draggable-and-resizable-progress-bar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Volumes/Work/React/draggable-and-resizable-progress-bar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Volumes/Work/React/draggable-and-resizable-progress-bar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import'./style.scss';var TimeProgressBar=/*#__PURE__*/function(_Component){_inherits(TimeProgressBar,_Component);function TimeProgressBar(props){var _this;_classCallCheck(this,TimeProgressBar);_this=_possibleConstructorReturn(this,_getPrototypeOf(TimeProgressBar).call(this,props));_this.intervalTimeFunc=function(){var curTime=_this.state.curTime;var endTime=_this.props.endTime;curTime++;if(curTime===endTime){clearInterval(_this.timer);}_this.setState({curTime:curTime});};_this.clearTimer=function(){clearInterval();};_this.state={stepTime:0,curTime:0};return _this;}_createClass(TimeProgressBar,[{key:\"componentDidMount\",value:function componentDidMount(){var _this$props=this.props,endTime=_this$props.endTime,startTime=_this$props.startTime;this.setState({stepTime:endTime/100,curTime:startTime});this.timer=setInterval(this.intervalTimeFunc,1000);}},{key:\"render\",value:function render(){var _this$state=this.state,stepTime=_this$state.stepTime,curTime=_this$state.curTime;var curPercent=curTime/stepTime;return React.createElement(\"div\",{className:\"time-progress-bar\"},React.createElement(\"div\",{className:\"progress-bar-content\"},React.createElement(\"div\",{className:\"fill-content\",style:{width:\"\".concat(curPercent,\"%\")}})),React.createElement(\"div\",{className:\"percent-value\"},Number(curPercent).toFixed(2),\" %\"));}}]);return TimeProgressBar;}(Component);export default TimeProgressBar;","map":{"version":3,"sources":["/Volumes/Work/React/draggable-and-resizable-progress-bar/src/common/components/TimeProgressBar/index.js"],"names":["React","Component","TimeProgressBar","props","intervalTimeFunc","curTime","state","endTime","clearInterval","timer","setState","clearTimer","stepTime","startTime","setInterval","curPercent","width","Number","toFixed"],"mappings":"y3BAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CAGA,MAAO,cAAP,C,GAEMC,CAAAA,e,yEACJ,yBAAYC,KAAZ,CAAmB,iDACjB,iFAAMA,KAAN,GADiB,MAgBnBC,gBAhBmB,CAgBA,UAAM,IACjBC,CAAAA,OADiB,CACL,MAAKC,KADA,CACjBD,OADiB,IAEfE,CAAAA,OAFe,CAEH,MAAKJ,KAFF,CAEfI,OAFe,CAIvBF,OAAO,GAEP,GAAIA,OAAO,GAAKE,OAAhB,CAAyB,CACvBC,aAAa,CAAC,MAAKC,KAAN,CAAb,CACD,CAED,MAAKC,QAAL,CAAc,CAAEL,OAAO,CAAPA,OAAF,CAAd,EACD,CA3BkB,OA6BnBM,UA7BmB,CA6BN,UAAM,CACjBH,aAAa,GACd,CA/BkB,CAGjB,MAAKF,KAAL,CAAa,CACXM,QAAQ,CAAE,CADC,CAEXP,OAAO,CAAE,CAFE,CAAb,CAHiB,aAOlB,C,yFAEmB,iBACa,KAAKF,KADlB,CACVI,OADU,aACVA,OADU,CACDM,SADC,aACDA,SADC,CAElB,KAAKH,QAAL,CAAc,CAAEE,QAAQ,CAAEL,OAAO,CAAG,GAAtB,CAA2BF,OAAO,CAAEQ,SAApC,CAAd,EAEA,KAAKJ,KAAL,CAAaK,WAAW,CAAC,KAAKV,gBAAN,CAAwB,IAAxB,CAAxB,CACD,C,uCAmBQ,iBACuB,KAAKE,KAD5B,CACCM,QADD,aACCA,QADD,CACWP,OADX,aACWA,OADX,CAGP,GAAMU,CAAAA,UAAU,CAAGV,OAAO,CAAGO,QAA7B,CAEA,MACE,4BAAK,SAAS,CAAC,mBAAf,EACE,2BAAK,SAAS,CAAC,sBAAf,EACE,2BAAK,SAAS,CAAC,cAAf,CAA8B,KAAK,CAAE,CAAEI,KAAK,WAAKD,UAAL,KAAP,CAArC,EADF,CADF,CAIE,2BAAK,SAAS,CAAC,eAAf,EAAgCE,MAAM,CAACF,UAAD,CAAN,CAAmBG,OAAnB,CAA2B,CAA3B,CAAhC,MAJF,CADF,CAQD,C,6BA/C2BjB,S,EAuD9B,cAAeC,CAAAA,eAAf","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport './style.scss'\n\nclass TimeProgressBar extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      stepTime: 0,\n      curTime: 0\n    }\n  }\n\n  componentDidMount() {\n    const { endTime, startTime } = this.props\n    this.setState({ stepTime: endTime / 100, curTime: startTime })\n\n    this.timer = setInterval(this.intervalTimeFunc, 1000)\n  }\n\n  intervalTimeFunc = () => {\n    let { curTime } = this.state\n    const { endTime } = this.props\n\n    curTime ++\n\n    if (curTime === endTime) {\n      clearInterval(this.timer)\n    }\n\n    this.setState({ curTime })\n  }\n\n  clearTimer = () => {\n    clearInterval()\n  }\n\n  render() {\n    const { stepTime, curTime } = this.state\n\n    const curPercent = curTime / stepTime\n\n    return (\n      <div className='time-progress-bar'>\n        <div className='progress-bar-content'>\n          <div className='fill-content' style={{ width: `${curPercent}%`}}></div>\n        </div>\n        <div className='percent-value'>{Number(curPercent).toFixed(2)} %</div>\n      </div>\n    )\n  }\n}\n\nTimeProgressBar.propTypes = {\n  startTime: PropTypes.number.isRequired,\n  endTime: PropTypes.number.isRequired\n}\n\nexport default TimeProgressBar"]},"metadata":{},"sourceType":"module"}