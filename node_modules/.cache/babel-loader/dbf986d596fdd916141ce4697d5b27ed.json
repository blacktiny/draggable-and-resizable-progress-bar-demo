{"ast":null,"code":"var _jsxFileName = \"/Volumes/Work/React/draggable-and-resizable-progress-bar/src/common/components/TimeProgressBar/index.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './style.scss';\n\nclass TimeProgressBar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.intervalTimeFunc = () => {\n      let curTime = this.state.curTime;\n      const endTime = this.props.endTime;\n      curTime++;\n\n      if (curTime === endTime) {\n        console.log('clear Timer');\n        this.clearTimer();\n      }\n\n      this.setState({\n        curTime\n      });\n    };\n\n    this.clearTimer = () => {\n      clearInterval();\n    };\n\n    this.state = {\n      stepTime: 0,\n      curTime: 0\n    };\n  }\n\n  componentDidMount() {\n    const _this$props = this.props,\n          endTime = _this$props.endTime,\n          startTime = _this$props.startTime;\n    this.setState({\n      stepTime: endTime / 100,\n      curTime: startTime\n    });\n    setInterval(this.intervalTimeFunc, 1000);\n  }\n\n  render() {\n    const _this$state = this.state,\n          stepTime = _this$state.stepTime,\n          curTime = _this$state.curTime;\n    const curPercent = curTime / stepTime;\n    return React.createElement(\"div\", {\n      className: \"time-progress-bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"progress-bar-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"fill-content\",\n      style: {\n        width: \"\".concat(curPercent, \"%\")\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"percent-value\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, Number(curPercent).toFixed(2), \" %\"));\n  }\n\n}\n\nTimeProgressBar.propTypes = {\n  startTime: PropTypes.number.isRequired,\n  endTime: PropTypes.number.isRequired\n};\nexport default TimeProgressBar;","map":{"version":3,"sources":["/Volumes/Work/React/draggable-and-resizable-progress-bar/src/common/components/TimeProgressBar/index.js"],"names":["React","Component","PropTypes","TimeProgressBar","constructor","props","intervalTimeFunc","curTime","state","endTime","console","log","clearTimer","setState","clearInterval","stepTime","componentDidMount","startTime","setInterval","render","curPercent","width","Number","toFixed","propTypes","number","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,cAAP;;AAEA,MAAMC,eAAN,SAA8BF,SAA9B,CAAwC;AACtCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAgBnBC,gBAhBmB,GAgBA,MAAM;AAAA,UACjBC,OADiB,GACL,KAAKC,KADA,CACjBD,OADiB;AAAA,YAEfE,OAFe,GAEH,KAAKJ,KAFF,CAEfI,OAFe;AAIvBF,MAAAA,OAAO;;AAEP,UAAIA,OAAO,KAAKE,OAAhB,EAAyB;AACvBC,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,aAAKC,UAAL;AACD;;AAED,WAAKC,QAAL,CAAc;AAAEN,QAAAA;AAAF,OAAd;AACD,KA5BkB;;AAAA,SA8BnBK,UA9BmB,GA8BN,MAAM;AACjBE,MAAAA,aAAa;AACd,KAhCkB;;AAGjB,SAAKN,KAAL,GAAa;AACXO,MAAAA,QAAQ,EAAE,CADC;AAEXR,MAAAA,OAAO,EAAE;AAFE,KAAb;AAID;;AAEDS,EAAAA,iBAAiB,GAAG;AAAA,wBACa,KAAKX,KADlB;AAAA,UACVI,OADU,eACVA,OADU;AAAA,UACDQ,SADC,eACDA,SADC;AAElB,SAAKJ,QAAL,CAAc;AAAEE,MAAAA,QAAQ,EAAEN,OAAO,GAAG,GAAtB;AAA2BF,MAAAA,OAAO,EAAEU;AAApC,KAAd;AAEAC,IAAAA,WAAW,CAAC,KAAKZ,gBAAN,EAAwB,IAAxB,CAAX;AACD;;AAoBDa,EAAAA,MAAM,GAAG;AAAA,wBACuB,KAAKX,KAD5B;AAAA,UACCO,QADD,eACCA,QADD;AAAA,UACWR,OADX,eACWA,OADX;AAGP,UAAMa,UAAU,GAAGb,OAAO,GAAGQ,QAA7B;AAEA,WACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAA8B,MAAA,KAAK,EAAE;AAAEM,QAAAA,KAAK,YAAKD,UAAL;AAAP,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAIE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCE,MAAM,CAACF,UAAD,CAAN,CAAmBG,OAAnB,CAA2B,CAA3B,CAAhC,OAJF,CADF;AAQD;;AAhDqC;;AAmDxCpB,eAAe,CAACqB,SAAhB,GAA4B;AAC1BP,EAAAA,SAAS,EAAEf,SAAS,CAACuB,MAAV,CAAiBC,UADF;AAE1BjB,EAAAA,OAAO,EAAEP,SAAS,CAACuB,MAAV,CAAiBC;AAFA,CAA5B;AAKA,eAAevB,eAAf","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport './style.scss'\n\nclass TimeProgressBar extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      stepTime: 0,\n      curTime: 0\n    }\n  }\n\n  componentDidMount() {\n    const { endTime, startTime } = this.props\n    this.setState({ stepTime: endTime / 100, curTime: startTime })\n\n    setInterval(this.intervalTimeFunc, 1000)\n  }\n\n  intervalTimeFunc = () => {\n    let { curTime } = this.state\n    const { endTime } = this.props\n\n    curTime ++\n\n    if (curTime === endTime) {\n      console.log('clear Timer')\n      this.clearTimer()\n    }\n\n    this.setState({ curTime })\n  }\n\n  clearTimer = () => {\n    clearInterval()\n  }\n\n  render() {\n    const { stepTime, curTime } = this.state\n\n    const curPercent = curTime / stepTime\n\n    return (\n      <div className='time-progress-bar'>\n        <div className='progress-bar-content'>\n          <div className='fill-content' style={{ width: `${curPercent}%`}}></div>\n        </div>\n        <div className='percent-value'>{Number(curPercent).toFixed(2)} %</div>\n      </div>\n    )\n  }\n}\n\nTimeProgressBar.propTypes = {\n  startTime: PropTypes.number.isRequired,\n  endTime: PropTypes.number.isRequired\n}\n\nexport default TimeProgressBar"]},"metadata":{},"sourceType":"module"}